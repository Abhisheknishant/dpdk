/* SPDX-License-Identifier: BSD-3-Clause
 * Copyright(c) 2015-2020 Intel Corporation
 */

#ifndef TEST_CRYPTODEV_SNOW3G_TEST_VECTORS_H_
#define TEST_CRYPTODEV_SNOW3G_TEST_VECTORS_H_

struct snow3g_test_data {
	struct {
		uint8_t data[64];
		unsigned len;
	} key;

	struct {
		uint8_t data[64] __rte_aligned(16);
		unsigned len;
	} cipher_iv;

	struct {
		uint8_t data[1024];
		unsigned len; /* length must be in Bits */
	} plaintext;

	struct {
		uint8_t data[1024];
		unsigned len; /* length must be in Bits */
	} ciphertext;

	struct {
		unsigned len;
	} validDataLenInBits;

	struct {
		unsigned len;
	} validCipherLenInBits;

	struct {
		unsigned len;
	} validAuthLenInBits;

	struct {
		uint8_t data[64];
		unsigned len;
	} auth_iv;

	struct {
		uint8_t data[64];
		unsigned int len; /* length must be in Bytes */
		unsigned int offset_bytes; /* offset must be in Bytes */
	} digest;

	struct {
		unsigned int len_bits; /* length must be in Bits */
		unsigned int offset_bits;
	} cipher;

	struct {
		unsigned int len_bits; /* length must be in Bits */
		unsigned int offset_bits;
	} auth;
};

struct snow3g_test_data snow3g_test_case_1 = {
	.key = {
		.data = {
			0xAC, 0x08, 0x16, 0x63, 0x21, 0xDF, 0x3D, 0x85,
			0xAE, 0xBD, 0xB8, 0xB5, 0x12, 0xA4, 0x53, 0x12
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x8A, 0xD7, 0x82, 0x72, 0x1B, 0x23, 0x21, 0xE2,
			0xA1, 0xEA, 0x4C, 0x81, 0xC8, 0x8F, 0x43, 0x40
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x7B, 0x61, 0x55, 0xF7, 0xE0, 0x10, 0x98, 0x20,
			0x7B, 0x58, 0xE6, 0xC7, 0xB1, 0x9F, 0xAA, 0xCC,
			0xF1, 0x32, 0xD1, 0xBB, 0xB4, 0xF2, 0x5A, 0xCB,
			0x01, 0x6D, 0xEC, 0x44, 0xB5, 0xEF, 0xCD, 0x31,
			0x50, 0x23, 0x28, 0x31, 0x34, 0xC1, 0x51, 0xB0,
			0x19, 0x37, 0x77, 0xCA, 0xD6, 0x21, 0x97, 0xC8,
			0x54, 0x69, 0x83, 0x09, 0x5C, 0xDD, 0xD4, 0x5D,
			0x4B, 0xC0, 0xA2, 0x01, 0xAF, 0x70, 0x32, 0x00,
			0x93, 0x5B, 0x31, 0xC8, 0x1C, 0x83, 0x78, 0x36,
			0xBA, 0xF0, 0x00, 0x91, 0x12, 0x98, 0x59, 0x66,
			0x01, 0xDD, 0x70, 0x5D, 0xBB, 0x44, 0xBB, 0x06,
			0x04, 0x5E, 0x08, 0xB4, 0xCE, 0x3A, 0xB4, 0x62,
			0x95, 0xE6, 0x2A, 0xB2
		},
		.len = 800
	},
	.ciphertext = {
		.data = {
			0x48, 0x54, 0x94, 0x8E, 0x2E, 0xEF, 0x05, 0x34,
			0x35, 0x88, 0x2D, 0x9E, 0x75, 0xEC, 0xDC, 0x6D,
			0x44, 0xE8, 0xD4, 0xFB, 0x91, 0x36, 0x58, 0x2C,
			0x68, 0x6E, 0x2E, 0x92, 0x14, 0x28, 0x27, 0x32,
			0x78, 0x26, 0x71, 0x11, 0xA9, 0xBD, 0x5D, 0x57,
			0x05, 0x28, 0x53, 0x25, 0x96, 0x9B, 0xB7, 0xBB,
			0x7D, 0xDC, 0xE0, 0x48, 0x44, 0x2E, 0xA0, 0xE1,
			0xD1, 0xB7, 0xC1, 0x20, 0x19, 0x64, 0x11, 0x28,
			0x9A, 0xA6, 0xE2, 0xDF, 0x0A, 0x04, 0xC9, 0x83,
			0x49, 0xA5, 0xB0, 0x49, 0x7A, 0x6A, 0x92, 0x2A,
			0xB0, 0xED, 0x99, 0x76, 0xD3, 0xE5, 0x7E, 0xE2,
			0x55, 0x5C, 0x73, 0xB8, 0x66, 0xEB, 0x11, 0x9A,
			0x95, 0x8B, 0xE1, 0xA4
		},
		.len = 800
	},
	.cipher = {
		.offset_bits = 0
	},
	.validDataLenInBits = {
		.len = 798
	},
	.validCipherLenInBits = {
		.len = 800
	},
	.auth_iv = {
		.data = {
			0xDB, 0x13, 0x5F, 0xC4, 0x62, 0xDF, 0x02, 0x8C,
			0x10, 0x9D, 0x09, 0x34, 0x35, 0x65, 0x08, 0xB1
		},
		.len = 16
	}
};

struct snow3g_test_data snow3g_test_case_2 = {
	.key = {
		.data = {
			0xDE, 0x78, 0x7F, 0x83, 0x6D, 0xEC, 0x8B, 0x1E,
			0x35, 0xB6, 0x1C, 0x58, 0x06, 0x44, 0xFB, 0x6B
		},
		.len = 16
	},
	.cipher_iv = {
	       .data = {
			0x84, 0xF2, 0xCF, 0xEE, 0x87, 0x3F, 0x34, 0x63,
			0x89, 0xB7, 0x2A, 0xD0, 0xED, 0x12, 0x6E, 0xAB
		},
	       .len = 16
	},
	.plaintext = {
		.data = {
			0x64, 0x24, 0x59, 0x3B, 0x0A, 0x8F, 0x1E, 0xCF,
			0x1E, 0xFC, 0xCE, 0xBD, 0xF2, 0x59, 0xCD, 0x90,
			0xC0, 0x90, 0x21, 0x31, 0x51, 0x88, 0x93, 0xC0,
			0x62, 0x0B, 0xF1, 0xAE, 0x32, 0xEE, 0xCD, 0x96,
			0x13, 0x26, 0xD1, 0x1D, 0xB5, 0xF0, 0xED, 0xD4,
			0xEC, 0xBB, 0x92, 0xDF, 0x15, 0x60, 0x70, 0xD6,
			0xF0, 0x91, 0x07, 0x41, 0x1A, 0x9B, 0x02, 0x7D,
			0xA6, 0xF3, 0x2C, 0xD8, 0xE2, 0xF9, 0x6E, 0xF5
		},
		.len = 512
	},
	.ciphertext = {
		.data = {
			0x94, 0x01, 0x9F, 0x91, 0xC3, 0x2A, 0x08, 0x7B,
			0xA9, 0xEE, 0x29, 0xE9, 0xB6, 0xE1, 0x19, 0x8A,
			0x32, 0x1C, 0x7E, 0xC4, 0x6B, 0x66, 0xAC, 0x01,
			0x31, 0xB0, 0x7F, 0xF8, 0x9C, 0x30, 0x00, 0x1F,
			0x77, 0x57, 0x74, 0xAE, 0x9B, 0x0D, 0x85, 0x48,
			0x50, 0xF8, 0xEB, 0xE8, 0xDB, 0xB7, 0x69, 0x6F,
			0xB5, 0x8D, 0x9C, 0xD3, 0x02, 0x6D, 0xF1, 0xB1,
			0x9B, 0x70, 0xE2, 0xD3, 0x71, 0x2B, 0x11, 0xFD
		},
		.len = 512
	},
	.cipher = {
		.offset_bits = 0
	},
	.validDataLenInBits = {
		.len = 510
	},
	.validCipherLenInBits = {
		.len = 512
	},
	.auth_iv = {
		.data = {
			0xD5, 0x2F, 0xAE, 0x41, 0x50, 0x7D, 0x98, 0x8E,
			0x7B, 0xEB, 0x68, 0x86, 0x5D, 0x6B, 0xB6, 0x20
		},
		.len = 16
	}
};

struct snow3g_test_data snow3g_test_case_3 = {
	.key = {
		.data = {
			0xB3, 0xFD, 0x1A, 0x50, 0xC9, 0x41, 0x7B, 0xEA,
			0xED, 0x18, 0x7C, 0x51, 0x13, 0x55, 0x25, 0xCD
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x5A, 0xF9, 0xEB, 0x3D, 0x64, 0x95, 0xA6, 0xB1,
			0xC3, 0x1C, 0x0C, 0x4C, 0xFD, 0xA6, 0x9A, 0x11
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xA7, 0x6E, 0x8D, 0x14, 0x9A, 0x3C, 0x7C, 0x3B,
			0xEE, 0x20, 0xA9, 0x3D, 0xCE, 0x46, 0x98
		},
		.len = 120
	},
	.ciphertext = {
		.data = {
			0x23, 0xC3, 0x19, 0xB3, 0x7F, 0x44, 0xB8, 0x32,
			0x52, 0xCD, 0x78, 0xFC, 0x45, 0xF3, 0x9B
		},
		.len = 120
	},
	.cipher = {
		.offset_bits = 0
	},
	.validDataLenInBits = {
		.len = 120
	},
	.validCipherLenInBits = {
		.len = 120
	},
	.auth_iv = {
		.data = {
			0xB0, 0xFF, 0x87, 0x8B, 0x41, 0x6B, 0x97, 0xFE,
			0xFC, 0xFF, 0x6D, 0xC6, 0x8A, 0x39, 0x45, 0x74
		},
		.len = 16
	},
	.digest = {
		.data = {0x58, 0x0B, 0x8B, 0x10},
		.len  = 4
	},
	.validAuthLenInBits = {
		.len = 120
	}
};

struct snow3g_test_data snow3g_test_case_4 = {
	.key = {
		.data = {
			0x0D, 0x4C, 0x71, 0x19, 0x39, 0x2E, 0x79, 0xD9,
			0x6C, 0xAB, 0x7F, 0x10, 0xBE, 0xA1, 0xB2, 0x1F
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x10, 0xB0, 0x10, 0xD7, 0x43, 0x3A, 0x80, 0xEA,
			0x10, 0xC3, 0x90, 0x33, 0x0E, 0xFE, 0x24, 0xD7
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x00, 0xBB, 0xE3, 0x5B, 0x08, 0xA7, 0xF8, 0xA7,
			0x6B, 0xB0, 0x29, 0x79, 0xF6, 0x8E, 0x8A, 0xE3,
			0x46, 0x9C, 0xB6, 0xEA, 0xE6, 0xB9, 0x07, 0x06,
			0xC9, 0xA8, 0x87, 0x7B, 0x9D, 0xFC, 0xDF, 0x9D
		},
		.len = 256
	},
	.ciphertext = {
		.data = {
			0x64, 0x9B, 0x85, 0xB6, 0x7F, 0xE6, 0x7C, 0x18,
			0xDC, 0x28, 0x58, 0x96, 0x74, 0xCA, 0x0C, 0x8E,
			0xDA, 0xB8, 0x93, 0x55, 0x3D, 0x48, 0xCE, 0x67,
			0x65, 0x9E, 0x31, 0x58, 0x89, 0x0B, 0x86, 0xA7
		},
		.len = 256
	},
	.cipher = {
		.offset_bits = 0
	},
	.validDataLenInBits = {
		.len = 253
	},
	.validCipherLenInBits = {
		.len = 256
	}
};

struct snow3g_test_data snow3g_test_case_5 = {
	.key = {
		.data = {
			0xBF, 0xBC, 0xDA, 0x39, 0x04, 0x3C, 0xC6, 0xF2,
			0xF2, 0xA3, 0xE2, 0x33, 0x32, 0x40, 0x59, 0xF7
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x42, 0xA0, 0xF9, 0x77, 0x0F, 0x49, 0xCE, 0x03,
			0x97, 0x3C, 0xF4, 0x57, 0x03, 0x9E, 0xCC, 0x30
		},
		.len = 16},
	.plaintext = {
		.data = {
			0xA1, 0x52, 0x82, 0xC4, 0x91, 0x98, 0x38, 0xEF,
			0xAB, 0x80, 0x17, 0xC3, 0x06, 0x64, 0x2B, 0x94,
			0xF4, 0x82, 0xEB, 0xB5, 0xAA, 0xED, 0xAA, 0xBC,
			0x22, 0x3C, 0x7B, 0xCD, 0x4A, 0x20, 0x9D, 0xEC,
			0x72, 0x20, 0xB0, 0x04, 0xB8, 0xE8, 0xF3, 0x64,
			0x68, 0x0B, 0x28, 0x6F, 0x6F, 0x53, 0x03, 0x63,
			0xD6, 0xEE, 0x18, 0x81, 0xDB, 0xC3, 0x3D, 0xFE,
			0xFF, 0xB9, 0xCB, 0x4A, 0xDA, 0x69, 0x36, 0x4C,
			0x8A, 0xE6, 0x51, 0x43, 0xCE, 0x44, 0xA8, 0x37,
			0x4F, 0xD0, 0xA6, 0xBF, 0x24, 0xAA, 0x22, 0xFA,
			0x99, 0x3B, 0x7B, 0x75, 0xFE, 0xB9, 0x73, 0xFE,
			0x73, 0x3F, 0x49, 0x4D, 0xA9, 0x7F, 0x9A, 0x33,
			0x66, 0xEB, 0x77, 0x35, 0x2F, 0x1F, 0x6C, 0x7F,
			0xEF
		},
		.len = 840
	},
	.ciphertext = {
		.data = {
			0x94, 0x23, 0xC0, 0x8C, 0xC9, 0x9B, 0x23, 0x49,
			0x91, 0x39, 0x8F, 0xF7, 0x59, 0xE0, 0xBB, 0xDF,
			0x8B, 0x3A, 0x97, 0x23, 0x09, 0x0D, 0xBF, 0x32,
			0x3D, 0x0F, 0x3B, 0x9E, 0x08, 0xCE, 0x63, 0x62,
			0x7E, 0xA6, 0x3B, 0x0E, 0xF7, 0x0D, 0xE3, 0x18,
			0x91, 0x3D, 0x86, 0x56, 0x7E, 0x18, 0x62, 0xD9,
			0x15, 0xDF, 0xA6, 0x88, 0x12, 0xF8, 0xD5, 0xFD,
			0x31, 0x1D, 0xB9, 0x2B, 0xF8, 0x23, 0x21, 0x38,
			0x11, 0xF7, 0x34, 0x74, 0x21, 0x6A, 0x70, 0x67,
			0x98, 0xB2, 0x87, 0x1A, 0x22, 0x07, 0x7C, 0x12,
			0x11, 0x2A, 0x89, 0xA2, 0x85, 0xBD, 0x51, 0x0E,
			0x79, 0x45, 0xA3, 0x54, 0x81, 0x85, 0x4C, 0xF5,
			0x99, 0x54, 0xBB, 0xA2, 0xB5, 0x9B, 0xC3, 0xBB,
			0x2A
		},
		.len = 840
	},
	.cipher = {
		.offset_bits = 0
	},
	.validDataLenInBits = {
		.len = 837
	},
	.validCipherLenInBits = {
		.len = 840
	},
};

struct snow3g_test_data snow3g_auth_cipher_test_case_1 = {
	.key = {
		.data = {
			0x02, 0x05, 0x8D, 0x12, 0x14, 0xE8, 0xA3, 0x5D,
			0x41, 0xC6, 0x3D, 0xB2, 0x0D, 0xAC, 0x0C, 0x7A
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x84, 0x69, 0x2C, 0x4F, 0x1E, 0x75, 0xAA, 0xEE,
			0xE5, 0x5E, 0x4E, 0xD5, 0x5D, 0x09, 0x7E, 0xB2
		},
		.len = 16
	},
	.auth_iv = {
		.data = {
			0xAA, 0xE3, 0x7D, 0x3B, 0x38, 0x48, 0xD4, 0x32,
			0x3A, 0xE0, 0xDC, 0xCD, 0xC4, 0xD8, 0xF0, 0x74
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xE6, 0xFF, 0x54, 0xDA, 0x2A, 0x4F, 0x9B, 0xEA,
			0x1D, 0x3A, 0x02, 0xE3, 0xAF, 0xAB, 0xCC, 0xCE,
			0xF2, 0x24, 0xEC, 0x55, 0x5A, 0x52, 0x98, 0x11,
			0xBF, 0xD5, 0xB7, 0xEA, 0x5F, 0xF0, 0x3C, 0x45,
			0xEF, 0x90, 0x1F, 0x1A, 0xE0, 0xBA, 0x04, 0xFD,
			0xF5, 0x07, 0xE1, 0xA5, 0xB2, 0xAE, 0x73, 0xA5
		},
		.len = 384
	},
	.ciphertext = {
	   .data = {
			0xFE, 0xB8, 0x67, 0x81, 0x2A, 0x00, 0x08, 0xE3,
			0xF4, 0x0F, 0x19, 0xCF, 0x84, 0xD4, 0x69, 0x78,
			0x36, 0xAE, 0xB1, 0xCF, 0x91, 0x9C, 0xE4, 0x4F,
			0x27, 0x8D, 0x33, 0x66, 0xB4, 0x23, 0xDB, 0x2B,
			0x02, 0xC6, 0xF5, 0x4E, 0x8C, 0x30, 0x16, 0x06,
			0xC1, 0x44, 0xE6, 0xD8, 0x75, 0x06, 0x16, 0x01
		},
		.len = 384
	},
	.cipher = {
		.len_bits = 384,
		.offset_bits = 0
	},
	.auth = {
		.len_bits = 384,
		.offset_bits = 0
	},
	.digest = {
		.data = {0xD5, 0xE7, 0xAE, 0x5E},
		.len  = 4,
		.offset_bytes = 0
	},
	.validDataLenInBits = {
		.len = 384
	},
	.validCipherLenInBits = {
		.len = 384
	},
	.validAuthLenInBits = {
		.len = 384
	},
};

struct snow3g_test_data snow3g_test_case_7 = {
	.key = {
		.data = {
			0x6C, 0xC9, 0x12, 0x57, 0xC0, 0x69, 0x2B, 0x0E,
			0x66, 0x6C, 0x28, 0xAA, 0xD1, 0x69, 0x32, 0x41
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x37, 0xBC, 0xB1, 0x2B, 0xF2, 0x0C, 0xFD, 0x95,
			0x8D, 0x6D, 0xC0, 0x17, 0x9D, 0x82, 0x13, 0x3F
		},
		.len = 16
	},
	.auth_iv = {
		.data = {
			0x5E, 0xB7, 0x03, 0x98, 0x8E, 0xE0, 0xA9, 0x5C,
			0x63, 0x71, 0x50, 0x92, 0x88, 0xD4, 0x08, 0x84
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xCF, 0xC2, 0xD7, 0x9D, 0xD4, 0x4E, 0x21, 0x1B,
			0xBF, 0xDE, 0xEB, 0x5A, 0x71, 0x66, 0xF0, 0x92,
			0xC2, 0x81, 0x3C, 0x4C, 0xF8, 0xE8, 0xD2, 0x88,
			0x20, 0xF4, 0x3E, 0xD4, 0x5C, 0x71, 0xBB, 0x2C,
			0x34, 0x93, 0xCA, 0x08, 0xE2, 0xEB, 0x23, 0xA2,
			0xCA, 0x0F, 0xFC, 0x3C, 0x76, 0xED, 0xCE, 0x38,
			0x6F, 0x0B, 0x85, 0x67, 0xF3, 0x58, 0xEF, 0x14,
			0x4C, 0x2D, 0xE8, 0xA9, 0x9E, 0xA4, 0xD5, 0xD3,
			0x38, 0xA0, 0xDB, 0x1A, 0x8C, 0xFF, 0xBC, 0x56,
			0x0F, 0xB9, 0x93, 0x85, 0xA6, 0x61, 0xBE, 0x15,
			0x6C, 0x43, 0x7C, 0x60, 0x9B, 0x6C, 0x74, 0xE7,
			0x99, 0x5D, 0x91, 0x38, 0x02, 0x67, 0x0B, 0x3A,
			0x07, 0xE7, 0x55, 0x93, 0xE7, 0x11, 0xEA, 0xF6,
			0xCB, 0x7D, 0x7C, 0x71, 0xDF, 0x3A, 0x87, 0x4C,
			0x7D, 0x04, 0xAC, 0x19, 0x70, 0x21, 0x01, 0x0A,
			0x7E, 0x92, 0x43, 0x80, 0x9E, 0x92, 0x2B, 0x11
		},
		.len = 128 << 3
	},
	.ciphertext = {
		.data = {
			0xCF, 0xC2, 0x51, 0x1F, 0xC7, 0x6D, 0x71, 0x82,
			0xFB, 0x03, 0xF3, 0x36, 0x2F, 0x69, 0x0E, 0x2E,
			0x60, 0xC3, 0x2F, 0x03, 0x50, 0xFC, 0x44, 0x10,
			0xDF, 0x4E, 0x22, 0xCA, 0x43, 0xF6, 0xDF, 0xF1,
			0xC9, 0x17, 0xF3, 0xEA, 0xA4, 0x57, 0x46, 0x97,
			0xD5, 0xC2, 0x08, 0x51, 0x86, 0xD8, 0xDA, 0x0D,
			0x3E, 0xAF, 0x68, 0x8A, 0x0D, 0xE4, 0xB0, 0x78,
			0xFF, 0xE2, 0x7E, 0xE7, 0x58, 0xDC, 0xF2, 0xAB,
			0xBA, 0x90, 0xFB, 0x13, 0x49, 0xCB, 0x5B, 0xA2,
			0x67, 0x8B, 0x6A, 0xC4, 0xDA, 0x8D, 0xF3, 0xF1,
			0xF5, 0x83, 0x7B, 0x74, 0xCF, 0x15, 0x6F, 0x65,
			0x2D, 0x42, 0x72, 0x46, 0x35, 0x45, 0x0B, 0x40,
			0x3B, 0x37, 0xAB, 0x1C, 0x17, 0x9E, 0xC0, 0x12,
			0x18, 0x91, 0x9A, 0x25, 0x97, 0xD9, 0x75, 0xB4,
			0xE0, 0xD4, 0x43, 0x2C, 0xE4, 0xCC, 0x29, 0x45,
			0x42, 0xE3, 0x8E, 0x6B, 0x17, 0x41, 0xAF, 0xA0
		},
		.len = 128 << 3
	},
	.cipher = {
		.len_bits = 126 << 3,
		.offset_bits = 2 << 3
	},
	.auth = {
		.len_bits = 124 << 3,
		.offset_bits = 0
	},
	.digest = {
		.data = {0x17, 0x41, 0xAF, 0xA0},
		.len = 4,
		.offset_bytes = 124
	},
	.validDataLenInBits = {
		.len = 128 << 3
	},
	.validCipherLenInBits = {
		.len = 126 << 3
	},
	.validAuthLenInBits = {
		.len = 124 << 3
	},
};

struct snow3g_test_data snow3g_auth_cipher_test_case_2 = {
	.key = {
		.data = {
			0xA3, 0x64, 0x54, 0x2E, 0x27, 0x97, 0x8B, 0x57,
			0xD4, 0xA9, 0x3B, 0xB1, 0xAF, 0x9B, 0xAA, 0xBC
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x81, 0xB2, 0x40, 0x3E, 0x20, 0xDC, 0xEE, 0xB3,
			0x46, 0xD7, 0x4F, 0x7D, 0x66, 0x86, 0x98, 0x6A
		},
		.len = 16
	},
	.auth_iv = {
		.data = {
			0x82, 0x16, 0x5E, 0x7A, 0xA9, 0xE7, 0xF4, 0xC3,
			0xE9, 0xEE, 0xDE, 0x1F, 0xB4, 0x61, 0x09, 0x21
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xBD, 0xCE, 0x18, 0xDD, 0x12, 0x65, 0xB5, 0xEC,
			0xAA, 0x33, 0xF6, 0x15, 0xD2, 0x5A, 0x77, 0x46,
			0x1D, 0x93, 0xC2, 0x07, 0x99, 0x42, 0x64, 0xB1,
			0x3A, 0xC8, 0xB5, 0xFD, 0xA6, 0xD7, 0xDE, 0x63,
			0xA5, 0xF6, 0x40, 0xB8, 0x5C, 0xF6, 0xA4, 0x06,
			0x29, 0x9A, 0x1B, 0xFC, 0xF5, 0x93, 0x42, 0x12,
			0x26, 0x04, 0x1A, 0xC0, 0x47, 0x7E, 0x71, 0x82,
			0x47, 0x26, 0x80, 0xED, 0xFE, 0x5E, 0x50, 0xA3,
			0x55, 0x91, 0x5C, 0xB1, 0x88, 0x00, 0xB8, 0xB2,
			0x9B, 0xD4, 0xAE, 0x90, 0x67, 0xF0, 0xA3, 0x8E,
			0xF5, 0xBD, 0x4F, 0x3C, 0x3C, 0xC0, 0xBF, 0x83,
			0xE7, 0x3F, 0x71, 0xE5, 0x9D, 0xC1, 0x89, 0xF3,
			0x53, 0xE5, 0xA5, 0xDC, 0xE6, 0x5D, 0x8E, 0x81,
			0x31, 0x3D, 0x12, 0x99, 0x2E, 0xB5, 0x28, 0x23,
			0x73, 0x77, 0x60, 0xAF, 0x38, 0x1F, 0x33, 0x1F,
			0x5E, 0xA4, 0x05, 0xFC, 0x66, 0x8E, 0xF0, 0xBA
		},
		.len = 128 << 3
	},
	.ciphertext = {
		.data = {
			0xBD, 0xCE, 0x0B, 0x91, 0xB6, 0x36, 0x6C, 0x22,
			0x2D, 0xFE, 0xC3, 0x97, 0xA0, 0x3B, 0x1F, 0xF5,
			0xCB, 0x80, 0x53, 0x4E, 0x5A, 0x51, 0xEE, 0x8C,
			0x1B, 0xA1, 0x41, 0xB0, 0x69, 0x3B, 0xFA, 0xAB,
			0xE6, 0xAD, 0x0D, 0xA9, 0x27, 0x2D, 0xDE, 0x6C,
			0x2B, 0xBD, 0xC9, 0xA3, 0x0A, 0xB2, 0xC7, 0x86,
			0x2B, 0xBE, 0x92, 0x32, 0x84, 0x49, 0x84, 0xCF,
			0x7C, 0x5F, 0xBF, 0x4B, 0x94, 0x60, 0x48, 0xCF,
			0xCF, 0x7A, 0x01, 0xB4, 0x38, 0xF8, 0x95, 0x60,
			0x17, 0x5B, 0x08, 0x71, 0x77, 0xEB, 0x52, 0xAD,
			0xDA, 0xDE, 0x91, 0x73, 0x31, 0xFD, 0xF2, 0x9B,
			0x1B, 0x0E, 0xB5, 0xFA, 0xF6, 0x78, 0x0D, 0x60,
			0xB6, 0x10, 0x71, 0x1E, 0x55, 0xD7, 0x94, 0xE9,
			0x36, 0x8C, 0x9B, 0xF6, 0x87, 0xEB, 0xE0, 0x4F,
			0xB7, 0xB5, 0xC1, 0x80, 0x48, 0x88, 0x3F, 0x17,
			0x9F, 0xB5, 0x5B, 0x7F, 0xB6, 0x23, 0x95, 0xF7
		},
		.len = 128 << 3
	},
	.cipher = {
		.len_bits = 126 << 3,
		.offset_bits = 2 << 3
	},
	.auth = {
		.len_bits = 124 << 3,
		.offset_bits = 0
	},
	.digest = {
		.data = {0xB6, 0x23, 0x95, 0xF7},
		.len = 4,
		.offset_bytes = 124
	},
	.validDataLenInBits = {
		.len = 128 << 3
	},
	.validCipherLenInBits = {
		.len = 126 << 3
	},
	.validAuthLenInBits = {
		.len = 124 << 3
	},
};

struct snow3g_test_data snow3g_auth_cipher_test_case_3 = {
	.key = {
		.data = {
			0xE6, 0x2D, 0x87, 0x06, 0x36, 0x44, 0xE7, 0x41,
			0xA2, 0xCC, 0x15, 0xB0, 0x8A, 0x86, 0x5B, 0xC0
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0x44, 0x7C, 0x74, 0x16, 0xB0, 0x09, 0x4B, 0x9F,
			0x16, 0xFB, 0xAA, 0x7D, 0xC1, 0xF2, 0x4C, 0x6E
		},
		.len = 16
	},
	.auth_iv = {
		.data = {
			0xEB, 0x76, 0xC4, 0x83, 0xCA, 0xDC, 0xF6, 0x64,
			0x6A, 0x7D, 0x38, 0x75, 0xAA, 0xC1, 0xBE, 0xB1
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xA4, 0x2D, 0xFE, 0xE3, 0x32, 0xD8, 0x35, 0x0B,
			0xAA, 0x3F, 0xCE, 0x6A, 0xC5, 0x38, 0x2B, 0xD3,
			0xA7, 0x97, 0xB8, 0xDB, 0x35, 0x38, 0x32, 0x0F,
			0x81, 0x0C, 0x44, 0x8B, 0xFD, 0xA5, 0x0F, 0xA1
		},
		.len = 32 << 3
	},
	.ciphertext = {
		.data = {
			0xA4, 0x2D, 0x21, 0x9D, 0xC5, 0x11, 0xF1, 0x88,
			0x90, 0xDB, 0x94, 0x64, 0x23, 0xD5, 0xD1, 0x1C,
			0x20, 0xCF, 0x35, 0x73, 0x07, 0xBB, 0xC4, 0xB7,
			0x96, 0xD3, 0xE6, 0x93, 0xA9, 0x97, 0xF7, 0x22
		},
		.len = 32 << 3
	},
	.cipher = {
		.len_bits = 30 << 3,
		.offset_bits = 2 << 3
	},
	.auth = {
		.len_bits = 28 << 3,
		.offset_bits = 0
	},
	.digest = {
		.data = {0xA9, 0x97, 0xF7, 0x22},
		.len = 4,
		.offset_bytes = 28
	},
	.validDataLenInBits = {
		.len = 32 << 3
	},
	.validCipherLenInBits = {
		.len = 30 << 3
	},
	.validAuthLenInBits = {
		.len = 28 << 3
	},
};

struct snow3g_test_data snow3g_auth_cipher_partial_digest_encryption = {
	.key = {
		.data = {
			0x15, 0xB9, 0xD2, 0x69, 0x78, 0xC6, 0x2E, 0x4A,
			0x06, 0xAE, 0xE8, 0xB1, 0xAF, 0x4A, 0x13, 0x61
		},
		.len = 16
	},
	.cipher_iv = {
		.data = {
			0xF3, 0x86, 0xBD, 0x78, 0x71, 0x0A, 0x91, 0x25,
			0x77, 0x5B, 0xFB, 0xFD, 0x65, 0x33, 0x81, 0x8E
		},
		.len = 16
	},
	.auth_iv = {
		.data = {
			0x75, 0xEB, 0x5B, 0x35, 0x7B, 0x16, 0x97, 0x37,
			0x1B, 0x72, 0x0C, 0x9F, 0xB3, 0x90, 0x72, 0xC5
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xAF, 0x22, 0x94, 0x97, 0xE2, 0x12, 0x57, 0xDE,
			0x5A, 0x35, 0xA2, 0x13, 0x50, 0x87, 0x5E, 0x68,
			0x82, 0xD5, 0xFA, 0x85, 0x3C, 0xDD, 0xCB, 0x0A,
			0x89, 0xD1, 0x99, 0xE1, 0xB9, 0x1E, 0x1D, 0x68
		},
		.len = 32 << 3
	},
	.ciphertext = {
		.data = {
			0xAF, 0x22, 0x94, 0x97, 0xE2, 0x12, 0x57, 0xDE,
			0x5A, 0x35, 0xA2, 0x13, 0x50, 0x87, 0x82, 0x23,
			0x60, 0x8C, 0xC1, 0x88, 0xD6, 0x7A, 0xCC, 0xF7,
			0x0A, 0xDB, 0x10, 0xE9, 0xAE, 0x2C, 0xBB, 0xEF
		},
		.len = 32 << 3
	},
	.cipher = {
		.len_bits = 16 << 3,
		.offset_bits = 14 << 3
	},
	.auth = {
		.len_bits = 28 << 3,
		.offset_bits = 0
	},
	.digest = {
		.data = {0xAE, 0x2C, 0xBB, 0xEF},
		.len = 4,
		.offset_bytes = 28
	},
	.validDataLenInBits = {
		.len = 32 << 3
	},
	.validCipherLenInBits = {
		.len = 16 << 3
	},
	.validAuthLenInBits = {
		.len = 28 << 3
	},
};

#endif /* TEST_CRYPTODEV_SNOW3G_TEST_VECTORS_H_ */
