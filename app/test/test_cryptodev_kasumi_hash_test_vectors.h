/* SPDX-License-Identifier: BSD-3-Clause
 * Copyright(c) 2016-2020 Intel Corporation
 */

#ifndef TEST_CRYPTODEV_KASUMI_HASH_TEST_VECTORS_H_
#define TEST_CRYPTODEV_KASUMI_HASH_TEST_VECTORS_H_

struct kasumi_hash_test_data {
	struct {
		uint8_t data[16];
		unsigned len;
	} key;

	/*
	 * Includes COUNT (4 bytes), FRESH (4 bytes), message
	 * and DIRECTION (1 bit), plus 1 0*, with enough 0s,
	 * so total length is multiple of 8 or 64 bits
	 */
	struct {
		uint8_t data[2056];
		unsigned len; /* length must be in Bits */
	} plaintext;

	struct {
		uint8_t data[64];
		unsigned len;
	} digest;
};

struct kasumi_hash_test_data kasumi_hash_test_case_1 = {
	.key = {
		.data = {
			0xB5, 0x03, 0xF0, 0x93, 0x0C, 0x73, 0xD4, 0x70,
			0x4E, 0x1D, 0xCD, 0x1B, 0x3B, 0xCE, 0x70, 0xCF
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x56, 0x1A, 0x0F, 0x7A, 0x14, 0x63, 0x13, 0xB7,
			0x0E, 0x6C, 0x3A, 0xE5, 0x4A, 0xA2, 0x10, 0xFE,
			0x88, 0xD1, 0xE6, 0x22, 0x6F, 0x99, 0xDC, 0xF3,
			0x79, 0x09, 0x9B, 0x56, 0x3E, 0x5A, 0xCB, 0x94
		},
		.len = 256
	},
	.digest = {
		.data = {0xE4, 0x1C, 0x36, 0x82},
		.len  = 4
	}
};

struct kasumi_hash_test_data kasumi_hash_test_case_2 = {
	.key = {
		.data = {
			0xD7, 0x43, 0x53, 0x7E, 0xA3, 0x26, 0x57, 0x83,
			0xCC, 0x68, 0x1F, 0x16, 0xAB, 0x3E, 0x4F, 0xD4
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xDD, 0x6F, 0xAD, 0xB6, 0xC0, 0x48, 0xEB, 0xB4,
			0x35, 0x2E, 0xD0, 0xFB, 0x16, 0xD3, 0x9F, 0xF9,
			0x23, 0x0B, 0xEE, 0x31, 0x18, 0x03, 0x1E, 0x18,
			0xE0, 0x10, 0xC0, 0x6E, 0x7D, 0x70, 0xB1, 0x5B,
			0xE0, 0x5F, 0x11, 0xA0, 0xA7, 0xFC, 0x55, 0xDD
		},
		.len = 320
	},
	.digest = {
		.data = {0x85, 0xC2, 0x18, 0x91},
		.len  = 4
	}
};

struct kasumi_hash_test_data kasumi_hash_test_case_3 = {
	.key = {
		.data = {
			0x2C, 0xE7, 0xD1, 0x10, 0xF8, 0x71, 0x43, 0x42,
			0xE3, 0x36, 0xF1, 0xF1, 0x6B, 0xF7, 0x8B, 0x82
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0xD8, 0x0C, 0x7B, 0x32, 0xAD, 0xE5, 0x80, 0xB6,
			0x20, 0x7C, 0xAF, 0x4C, 0xBE, 0x58, 0x4D, 0xE7,
			0x39, 0xDB, 0x79, 0x82, 0xEC, 0xE3, 0x89, 0x93,
			0xD8, 0xC3, 0x70, 0x91, 0x9B, 0xB0, 0x3C, 0x73,
			0xBD, 0xB8, 0xA6, 0x6A, 0x9D, 0x26, 0x21, 0xBE,
			0xA3, 0xD1, 0x0B, 0x61, 0x2A, 0x58, 0x48, 0x63,
			0x33, 0xC2, 0xE5, 0x1F, 0xA6, 0x6F, 0xB2, 0x7E
		},
		.len = 448
	},
	.digest = {
		.data = {0xC7, 0xDB, 0xB4, 0xC8},
		.len  = 4
	}
};

struct kasumi_hash_test_data kasumi_hash_test_case_4 = {
	.key = {
		.data = {
			0x01, 0xEB, 0x6B, 0x5C, 0xD2, 0x44, 0x32, 0x0D,
			0x99, 0x16, 0x4F, 0x67, 0x76, 0x86, 0xB1, 0xE1
		},
	.len = 16
	},
	.plaintext = {
		.data = {
			0x74, 0x5B, 0xDE, 0x1F, 0xA2, 0x3F, 0x31, 0x5C,
			0x9A, 0x9D, 0xFB, 0x53, 0x30, 0x74, 0x8C, 0xA8,
			0x5C, 0x0E, 0x79, 0x88, 0xAD, 0x54, 0xD5, 0x97,
			0x79, 0x22, 0xF5, 0x25, 0xFC, 0x70, 0x5A, 0x71,
			0xCB, 0x39, 0x90, 0x6E, 0x78, 0xC2, 0xCB, 0x12,
			0x60, 0xC7, 0x66, 0x90, 0x3C, 0xF2, 0x38, 0x98,
			0x01, 0xB1, 0x20, 0xAF, 0x06, 0xF5, 0x47, 0x80,
			0x17, 0x3D, 0xA6, 0x14, 0xAD, 0x00, 0x86, 0x78
		},
		.len = 512
	},
	.digest = {
		.data = {0xF8, 0xAF, 0xF0, 0xC8},
		.len  = 4
	}
};

struct kasumi_hash_test_data kasumi_hash_test_case_5 = {
	.key = {
		.data = {
			0x1E, 0xBA, 0x4E, 0xC9, 0xC8, 0x9E, 0x64, 0x33,
			0x93, 0xB8, 0x9C, 0xEE, 0x69, 0x22, 0x71, 0x24
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x6E, 0xF6, 0x2B, 0x9A, 0x8F, 0xDA, 0xC5, 0xDD,
			0x02, 0x69, 0xD9, 0xA2, 0x55, 0xF8, 0xB7, 0x13,
			0xF0, 0x5B, 0x00, 0x56, 0x7D, 0xB1, 0x3C, 0x0E,
			0xEC, 0x52, 0x20, 0xC3, 0x97, 0x29, 0xDE, 0x05,
			0x20, 0x09, 0xA0, 0xB0, 0xE4, 0x65, 0x8D, 0xE7,
			0xCF, 0x67, 0x89, 0x25, 0x60, 0x40, 0x38, 0x50,
			0x9B, 0x39, 0xA7, 0x19, 0xEA, 0xE4, 0x27, 0xD7,
			0x36, 0x48, 0x9A, 0xCD, 0x72, 0x79, 0xD3, 0x92,
			0x83, 0x73, 0x42, 0x67, 0xD9, 0xD0, 0x4E, 0xA9,
			0x37, 0xD8, 0xCE, 0x98, 0x18, 0x07, 0xE8, 0xB4,
			0x40, 0x8F, 0xCD, 0x2B, 0x73, 0xF4, 0x02, 0xAA,
			0x3D, 0x9C, 0x78, 0xAF, 0x16, 0x4B, 0x42, 0x99,
			0xBF, 0x84, 0x01, 0x99, 0x55, 0x50, 0x42, 0x8D,
			0x28, 0x11, 0x25, 0x40, 0x18, 0x0D, 0xF4, 0x58,
			0x9D, 0xC2, 0x83, 0x11, 0xB6, 0x86, 0xBB, 0xF3,
			0x23, 0x33, 0xA3, 0x39, 0x7F, 0xE5, 0xD2, 0x3F,
			0x6A, 0xD4, 0xD9, 0xBF, 0x24, 0x1C, 0x4D, 0x4C
		},
		.len = 1088
	},
	.digest = {
		.data = {0x9F, 0x75, 0xB6, 0xA8},
		.len  = 4
	}
};

struct kasumi_hash_test_data kasumi_hash_test_case_6 = {
	.key = {
		.data = {
			0xBB, 0xEC, 0x4D, 0x72, 0xC5, 0x81, 0x9B, 0xE8,
			0x2E, 0x6E, 0x77, 0x14, 0x27, 0x19, 0x1E, 0x99
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x53, 0x71, 0xF2, 0xE3, 0xA6, 0xC3, 0xBE, 0xEC,
			0x5F, 0x5F, 0x20, 0xD5, 0x7A, 0xFA, 0xFA, 0xE9,
			0xB5, 0x06, 0x1D, 0x0A, 0x18, 0x06, 0xA0, 0x53,
			0x98, 0x3B, 0xB8, 0x73, 0x49, 0xC6, 0x41, 0x9D,
			0x38, 0x33, 0x80, 0xDF, 0xF6, 0x3F, 0xCB, 0x56,
			0x9E, 0xEC, 0x2B, 0x18, 0xE6, 0x25, 0x02, 0x9C,
			0x2C, 0x1F, 0xA6, 0x45, 0x26, 0x46, 0x99, 0xBF,
			0x82, 0x52, 0x32, 0xCC, 0x19, 0x74, 0x69, 0x51,
			0xA8, 0xE9, 0x31, 0x9F, 0x29, 0xFC, 0xF5, 0xC8,
			0xE8, 0x21, 0xE0, 0xCF, 0x47, 0xE3, 0x6B, 0x74,
			0x03, 0x11, 0xB9, 0x29, 0x58, 0x53, 0xE9, 0xDA,
			0xA5, 0x1C, 0xA6, 0xBF, 0x90, 0x0F, 0x11, 0x38,
			0xF9, 0x42, 0xD7, 0x23, 0x3E, 0xCD, 0xEB, 0x27,
			0xEE
		},
		.len = 840
	},
	.digest = {
		.data = {0xDC, 0xC5, 0x4C, 0x3C},
		.len  = 4
	}
};

struct kasumi_hash_test_data kasumi_hash_test_case_7 = {
	.key = {
		.data = {
			0xD8, 0xBA, 0x2F, 0x5F, 0x3A, 0x5A, 0xCD, 0x0E,
			0xA6, 0x8F, 0xC2, 0x19, 0x19, 0x34, 0xDC, 0x5A
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x38, 0xED, 0x3A, 0xAD, 0xBD, 0x2B, 0x38, 0x7C,
			0x3C, 0xD5, 0x68, 0x08, 0x1F, 0xFC, 0xBD, 0x40,
			0x7C, 0x32, 0x3A, 0x3E, 0x34, 0xDC, 0x06, 0x1A
		},
		.len = 192
	},
	.digest = {
		.data = {0x87, 0x5F, 0xE4, 0x89},
		.len  = 4
	}
};
#endif /* TEST_CRYPTODEV_KASUMI_HASH_TEST_VECTORS_H_ */
